{"version":3,"sources":["customer.ts","platform.ts","game.ts"],"names":["Customer","Customer.constructor","Customer.getName","Platform","Platform.constructor","SimpleGame","SimpleGame.constructor","SimpleGame.preload","SimpleGame.create"],"mappings":"AAAA,IAAM,QAAQ;IAGVA,SAHEA,QAAQA,CAGEA,IAAYA;QACpBC,IAAIA,CAACA,IAAIA,GAAGA,IAAIA,CAACA;IACrBA,CAACA;IAEDD,0BAAOA,GAAPA;QACIE,MAAMA,CAACA,IAAIA,CAACA,IAAIA,CAACA;IACrBA,CAACA;IACLF,eAACA;AAADA,CAVA,AAUCA,IAAA;AAED,IAAI,CAAC,GAAG,IAAI,QAAQ,CAAC,KAAK,CAAC,CAAC;AAC5B,CAAC,CAAC,OAAO,EAAE,CAAC;ACbZ,oDAAoD;AACpD,8DAA8D;;;;;;;AAE9D,AAqBA,GArBG;AACH,mBAAmB;AACnB,GAAG;AACH,uCAAuC;AACvC,WAAW;AACX,QAAQ;AACR,GAAG;AACH,yBAAyB;AACzB,OAAO;AACP,GAAG;AACH,kBAAkB;AAClB,uDAAuD;AACvD,QAAQ;AACR,GAAG;AACH,iBAAiB;AACjB,qGAAqG;AACrG,uCAAuC;AACvC,QAAQ;AACR,GAAG;AACH,IAAI;IAEE,QAAQ;IAASG,UAAjBA,QAAQA,UAAsBA;IAEhCA,SAFEA,QAAQA,CAEEA,IAAiBA;QAEzBC,kBAAMA,IAAIA,EAAEA,CAACA,EAAEA,CAACA,EAAEA,EAAEA,CAACA,CAAAA;QACrBA,CAACA;QAEDA,CAACA;IACLA,CAACA;IACLD,eAACA;AAADA,CATA,AASCA,EATsB,MAAM,CAAC,MAAM,EASnC;ACjCD,oDAAoD;AACpD,8DAA8D;AAE9D,IAAM,UAAU;IAEZE,SAFEA,UAAUA;QAGRC,IAAIA,CAACA,IAAIA,GAAGA,IAAIA,MAAMA,CAACA,IAAIA,CAACA,GAAGA,EAAEA,GAAGA,EAAEA,MAAMA,CAACA,IAAIA,EAAEA,SAASA,EAAEA,EAAEA,OAAOA,EAAEA,IAAIA,CAACA,OAAOA,EAAEA,MAAMA,EAAEA,IAAIA,CAACA,MAAMA,EAAEA,CAACA,CAACA;QAC9GA,IAAIA,CAACA,QAAQA,GAAGA,IAAIA,QAAQA,CAACA,IAAIA,CAACA,IAAIA,CAACA,CAACA;IAC5CA,CAACA;IAKDD,4BAAOA,GAAPA;QACIE,IAAIA,CAACA,IAAIA,CAACA,IAAIA,CAACA,KAAKA,CAACA,UAAUA,EAAEA,uBAAuBA,CAACA,CAACA;IAC9DA,CAACA;IAEDF,2BAAMA,GAANA;IAEAG,CAACA;IAELH,iBAACA;AAADA,CAlBA,AAkBCA,IAAA;AAED,MAAM,CAAC,MAAM,GAAG;IAEZ,IAAI,IAAI,GAAG,IAAI,UAAU,EAAE,CAAC;AAEhC,CAAC,CAAC","file":"output.js","sourcesContent":["class Customer {\r\n    name: string;\r\n\r\n    constructor(name: string) {\r\n        this.name = name;\r\n    }\r\n\r\n    getName() {\r\n        return this.name;\r\n    }\r\n}\r\n\r\nvar c = new Customer('bob');\r\nc.getName();","///<reference path=\"../../tools/typings/tsd.d.ts\" />\r\n///<reference path=\"../../tools/typings/typescriptApp.d.ts\" />\r\n\r\n// \r\n// class Platform {\r\n// \r\n//     constructor(game: Phaser.Game) {\r\n//         \r\n//     }\r\n// \r\n//     game: Phaser.Game;\r\n//     \r\n// \r\n//     preload() {\r\n//         this.game.load.image('logo', 'phaser2.png');\r\n//     }\r\n// \r\n//     create() {\r\n//         var logo = this.game.add.sprite(this.game.world.centerX, this.game.world.centerY, 'logo');\r\n//         logo.anchor.setTo(0.5, 0.5);\r\n//     }\r\n// \r\n// }\r\n\r\nclass Platform extends Phaser.Sprite\r\n{\r\n    constructor(game: Phaser.Game)\r\n    {\r\n        super(game, 1, 2, \"\")\r\n        {\r\n                    \r\n        }\r\n    }\r\n}","///<reference path=\"../../tools/typings/tsd.d.ts\" />\r\n///<reference path=\"../../tools/typings/typescriptApp.d.ts\" />\r\n\r\nclass SimpleGame {\r\n\r\n    constructor() {\r\n        this.game = new Phaser.Game(800, 600, Phaser.AUTO, 'content', { preload: this.preload, create: this.create });\r\n        this.platform = new Platform(this.game);\r\n    }\r\n\r\n    game: Phaser.Game;\r\n    platform : Platform;\r\n\r\n    preload() {\r\n        this.game.load.image('platform', 'dist/img/platform.png');\r\n    }\r\n\r\n    create() {\r\n\r\n    }\r\n\r\n}\r\n\r\nwindow.onload = () => {\r\n\r\n    var game = new SimpleGame();\r\n\r\n};"],"sourceRoot":"/source/"}