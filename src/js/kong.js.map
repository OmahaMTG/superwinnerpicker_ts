{"version":3,"sources":["customer.ts","platform.ts","game.ts"],"names":["Customer","Customer.constructor","Customer.getName","Platform","Platform.constructor","Platform.calculateTotalRows","Platform.calculateTotalColumns","Platform.createMainPlaforms","Platform.createKongPlatform","SimpleGame","SimpleGame.constructor","SimpleGame.preload","SimpleGame.create"],"mappings":"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","file":"kong.js","sourcesContent":["class Customer {\r\n    name: string;\r\n\r\n    constructor(name: string) {\r\n        this.name = name;\r\n    }\r\n\r\n    getName() {\r\n        return this.name;\r\n    }\r\n}\r\n\r\nvar c = new Customer('bob');\r\nc.getName();","///<reference path=\"../../tools/typings/tsd.d.ts\" />\r\n///<reference path=\"../../tools/typings/typescriptApp.d.ts\" />\r\n\r\nclass Platform extends Phaser.Group{\r\n    private platformHeight = 24;\r\n    private spaceBetweenPlatforms = 120;\r\n    private kongPlatformSpace = 200;\r\n    private rowHeightOffset: number;\r\n\r\n    calculateTotalRows() : number {\r\n        return (this.game.height - this.platformHeight - this.kongPlatformSpace) / this.spaceBetweenPlatforms;\r\n    }\r\n\r\n    calculateTotalColumns() : number {\r\n        return  this.game.width / (15 * 3);\r\n    }\r\n\r\n    constructor(game: Phaser.Game) {\r\n        super(game);\r\n        this.rowHeightOffset =  this.game.height - this.platformHeight;\r\n        this.enableBody = true;\r\n        this.createMainPlaforms();\r\n        this.createKongPlatform();\r\n    }\r\n\r\n    createMainPlaforms() {\r\n             console.log('adding platform Rows : ' + this.calculateTotalRows());\r\n            for (var row = 0; row < this.calculateTotalRows(); row++) {\r\n\r\n                for (var column = 0; column < this.calculateTotalColumns(); column++) {\r\n                    var ground = this.create(column * (15 * 3),  this.rowHeightOffset, 'platform');\r\n                    ground.scale.setTo(3, 3);\r\n                    ground.body.immovable = true;\r\n                }\r\n                this.rowHeightOffset -= this.spaceBetweenPlatforms;\r\n            }\r\n    }\r\n\r\n    createKongPlatform() {\r\n        for (var column = 0; column < 6; column++) {\r\n            var ground = this.create(column * (15 * 3), this.rowHeightOffset, 'platform');\r\n            ground.scale.setTo(3, 3);\r\n            ground.body.immovable = true;\r\n        }\r\n    }\r\n}","///<reference path=\"../../tools/typings/tsd.d.ts\" />\r\n///<reference path=\"../../tools/typings/typescriptApp.d.ts\" />\r\n\r\nclass SimpleGame {\r\n\r\n    constructor() {\r\n        this.game = new Phaser.Game(800, 600, Phaser.AUTO, 'stage', { preload: this.preload, create: this.create });\r\n    }\r\n\r\n    game: Phaser.Game;\r\n    platform : Platform;\r\n\r\n    preload() {\r\n        this.game.load.image('platform', 'src/img/platform.png');\r\n    }\r\n\r\n    create() {\r\n        this.platform = new Platform(this.game);\r\n    }\r\n\r\n}\r\n\r\nwindow.onload = () => {\r\n\r\n    var game = new SimpleGame();\r\n\r\n};"],"sourceRoot":"/source/"}