{"version":3,"sources":["kong.ts","letterBarrel.ts","mario.ts","platform.ts","winnerCount.ts","winnerDraw.ts","winnerName.ts","game.ts"],"names":["Kong","Kong.constructor","Barrels","Barrels.constructor","Mario","Mario.constructor","Mario.StartSmash","Mario.update","Mario.ReachedEndOfPlatform","Mario.resetMario","Mario.getNextRowHeight","Platform","Platform.constructor","Platform.calculateTotalRows","Platform.calculateTotalColumns","Platform.createMainPlaforms","Platform.createKongPlatform","WinnerCount","WinnerCount.constructor","WinnerCount.UpdateNumber","WinnerCount.CheckKeys","WinnerDraw","WinnerDraw.constructor","WinnerDraw.PickWinners","WinnerName","WinnerName.constructor","WinnerPicker","WinnerPicker.constructor","WinnerPicker.preload","WinnerPicker.create","WinnerPicker.update","WinnerPicker.col"],"mappings":"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A;IAEOF,sBAAMA,GAAdA;QACCG,EAAEA,CAACA,CAACA,CAACA,IAAIA,CAACA,UAAUA,CAACA,CAACA,CAACA;YACtBA,MAAMA,CAACA;QACRA,CAACA;QAEDA,EAAEA,CAACA,CAACA,IAAIA,CAACA,mBAAmBA,CAACA,CAACA,CAACA;YAC7BA,IAAIA,CAACA,CAACA,IAAIA,CAACA,CAACA;QACdA,CAACA;QAAAA,IAAIA,CAACA,CAACA;YACLA,IAAIA,CAACA,CAACA,IAAIA,CAACA,CAACA,CAACA;QACfA,CAACA;IACFA,CAACA;IAEOH,oCAAoBA,GAA5BA;QACCI,OAAOA,CAACA,GAAGA,CAACA,eAAeA,CAACA,CAACA;QAC7BA,IAAIA,CAACA,KAAKA,CAACA,CAACA,IAAIA,CAACA,CAACA,CAACA;QACnBA,EAAEA,CAACA,CAACA,IAAIA,CAACA,mBAAmBA,CAACA,CAACA,CAACA;YAC9BA,IAAIA,CAACA,mBAAmBA,GAAGA,KAAKA,CAACA;YACjCA,IAAIA,CAACA,CAACA,IAAIA,CAACA,CAACA;QACbA,CAACA;QAAAA,IAAIA,CAACA,CAACA;YACNA,IAAIA,CAACA,mBAAmBA,GAAGA,IAAIA,CAACA;YAChCA,IAAIA,CAACA,CAACA,IAAIA,CAACA,CAACA,CAACA;QACdA,CAACA;QAEDA,IAAIA,aAAaA,GAAGA,IAAIA,CAACA,gBAAgBA,CAACA,IAAIA,CAACA,CAACA,CAACA,GAAGA,EAAEA,CAACA;QACvDA,AACAA,8CAD8CA;QAC9CA,OAAOA,CAACA,GAAGA,CAACA,gBAAgBA,GAAGA,aAAaA,GAAGA,oBAAoBA,GAAGA,IAAIA,CAACA,CAACA,CAACA,CAACA;QAC9EA,OAAOA,CAACA,GAAGA,CAACA,IAAIA,CAACA,cAAcA,CAACA,CAACA;QACjCA,EAAEA,CAACA,CAACA,aAAaA,GAAGA,EAAEA,GAAGA,IAAIA,CAACA,CAACA,CAACA,CAACA,CAACA;YACjCA,IAAIA,CAACA,UAAUA,EAAEA,CAACA;QACnBA,CAACA;QAEDA,IAAIA,CAACA,CAACA,GAAGA,aAAaA,C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","file":"kong.js","sourcesContent":["///<reference path=\"../../tools/typings/tsd.d.ts\" />\r\n///<reference path=\"../../tools/typings/typescriptApp.d.ts\" />\r\n\r\nclass Kong extends Phaser.Sprite{\r\n\tprivate arcadeBody: Phaser.Physics.Arcade.Body;\r\n\r\n\tconstructor(game: Phaser.Game, kongRowHeight: number) {\r\n        super(game, 125, kongRowHeight - (34 * 3), 'kong');\r\n\t\tthis.scale.set(3, 3);\r\n\t\tthis.game.physics.arcade.enableBody(this);\r\n\t\tthis.game.physics.arcade.enable;\r\n\r\n\t\tthis.arcadeBody = <Phaser.Physics.Arcade.Body>this.body;\r\n\t\tthis.arcadeBody.collideWorldBounds = true;\r\n\t\tthis.arcadeBody.gravity.y = 300;\r\n\t\tthis.animations.add('wait', [2, 3], 1, true);\r\n\t\tthis.animations.add('angry', [0, 1], 2, true);\r\n\t\tthis.animations.play('wait', null, true);\r\n\t}\r\n\r\n}","///<reference path=\"../../tools/typings/tsd.d.ts\" />\r\n///<reference path=\"../../tools/typings/typescriptApp.d.ts\" />\r\n\r\nclass Barrels extends Phaser.Group{\r\n\t\r\n\t    constructor(game: Phaser.Game, platformHeights: number[], mario: Mario) {\r\n        \tsuper(game);\r\n\t\t\t\r\n\t\t\tplatformHeights.forEach(x => {\r\n\t\t\t\tfor (var column = 0; column < 25; column++) {\r\n\t                var barrel = this.create(column * (10 * 2.5) + 100,  x - 40, 'barrel');\r\n\t\t\t\t\tgame.physics.arcade.enable(barrel);\r\n\t\t\t\t\tbarrel.body.bounce.y = 0.1;\r\n\t    barrel.body.gravity.y = 100;\r\n\t    barrel.body.collideWorldBounds = true\r\n\t  \t\t\t\tthis.game.physics.arcade.enableBody(barrel);\r\n\t\t\t\t\t  barrel.scale.setTo(2.5, 2.5);\r\n\t            }\r\n\t\t\t})\r\n\t\t}\r\n}","///<reference path=\"../../tools/typings/tsd.d.ts\" />\r\n///<reference path=\"../../tools/typings/typescriptApp.d.ts\" />\r\n\r\nclass Mario extends Phaser.Sprite{\r\n\tprivate arcadeBody: Phaser.Physics.Arcade.Body;\r\n\tprivate isSmashing: boolean;\r\n\tprivate isMovingRightToLeft: boolean;\r\n\tprivate platformHights: number[];\r\n\r\n\tconstructor(game: Phaser.Game, platformHeights: number[]) {\r\n\t\tsuper(game, 50, game.height - 80, 'mario');\r\n\t\tthis.platformHights = platformHeights;\r\n\t\tthis.scale.set(3, 3);\r\n\t\tthis.game.physics.arcade.enableBody(this);\r\n\t\tthis.game.physics.arcade.enable;\r\n\r\n\t\tthis.arcadeBody = <Phaser.Physics.Arcade.Body>this.body;\r\n\t\tthis.arcadeBody.gravity.y = 300;\r\n\r\n\t\tthis.animations.add('hammer', [ 5, 7, 6, 8], 8, true);\r\n\t\tthis.animations.add('ready', [ 5], 8, true);\r\n\r\n\t\tthis.animations.play('ready', 8 , true);\r\n\r\n\t\tthis.anchor.setTo(.5, .5);\r\n\r\n\t    this.scale.x *= -1;\r\n\t\tthis.isSmashing = false;\r\n\t\tthis.checkWorldBounds = true;\r\n\t\tthis.events.onOutOfBounds.add(this.ReachedEndOfPlatform, this);\r\n\t}\r\n\r\n\tpublic StartSmash() {\r\n\r\n\t\tif (this.isSmashing) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tthis.isSmashing = true;\r\n\t\tthis.isMovingRightToLeft = true;\r\n\t\tthis.animations.play('hammer', 8 , true);\r\n\t}\r\n\r\n\tpublic  update() {\r\n\t\tif (!this.isSmashing) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif (this.isMovingRightToLeft) {\r\n\t\t\t\tthis.x += 3;\r\n\t\t}else {\r\n\t\t\t\tthis.x += -3;\r\n\t\t}\r\n\t}\r\n\r\n\tprivate ReachedEndOfPlatform() {\r\n\t\tconsole.log('out of bounds');\r\n\t\tthis.scale.x *= -1;\r\n\t\tif (this.isMovingRightToLeft) {\r\n\t\t\tthis.isMovingRightToLeft = false;\r\n\t\t\tthis.x += 3;\r\n\t\t}else {\r\n\t\t\tthis.isMovingRightToLeft = true;\r\n\t\t\tthis.x += -3;\r\n\t\t}\r\n\r\n\t\tvar nextRowHeight = this.getNextRowHeight(this.y) - 50;\r\n\t\t//this.y = this.getNextRowHeight(this.y) - 50;\r\n\t\tconsole.log('nextRowHeight:' + nextRowHeight + 'current rowHeight:' + this.y);\r\n\t\tconsole.log(this.platformHights);\r\n\t\tif (nextRowHeight + 50 > this.y) {\r\n\t\t\tthis.resetMario();\r\n\t\t}\r\n\r\n\t\tthis.y = nextRowHeight;\r\n\t}\r\n\r\n\tprivate resetMario() {\r\n\t\tif (!this.isMovingRightToLeft) {\r\n\t\t\t\tthis.scale.x *= -1;\r\n\t\t\t\tthis.isMovingRightToLeft = false;\r\n\t\t\t}\r\n\r\n\t\t\tthis.isSmashing = false;\r\n\t\t\tthis.x = 50;\r\n\t\t\tthis.y = this.game.height - 80;\r\n\t}\r\n\r\n\tprivate getNextRowHeight(currentHeight) {\r\n\t  for (var j = 0; j < this.platformHights.length; j++) {\r\n\t    if (currentHeight > this.platformHights[j]) {\r\n\t      return this.platformHights[j];\r\n\t    }\r\n\t  }\r\n\t  return this.platformHights[0];\r\n\t}\r\n}","///<reference path=\"../../tools/typings/tsd.d.ts\" />\r\n///<reference path=\"../../tools/typings/typescriptApp.d.ts\" />\r\n\r\nclass Platform extends Phaser.Group{\r\n    private platformHeight = 24;\r\n    private spaceBetweenPlatforms = 120;\r\n    private kongPlatformSpace = 200;\r\n    private rowHeightOffset: number;\r\n    public gameRowHeights: number[] = [];\r\n    public kongRowHeight: number;\r\n\r\n    calculateTotalRows() : number {\r\n        return Math.floor((this.game.height - this.platformHeight - this.kongPlatformSpace) / this.spaceBetweenPlatforms);\r\n    }\r\n\r\n    calculateTotalColumns() : number {\r\n        return  this.game.width / (15 * 3);\r\n    }\r\n\r\n    constructor(game: Phaser.Game) {\r\n        super(game);\r\n        this.rowHeightOffset =  this.game.height - this.platformHeight;\r\n        this.enableBody = true;\r\n        this.createMainPlaforms();\r\n        this.createKongPlatform();\r\n    }\r\n\r\n    createMainPlaforms() {\r\n        console.log('adding %s platform Rows', this.calculateTotalRows());\r\n        for (var row = 0; row < this.calculateTotalRows(); row++) {\r\n\r\n            for (var column = 0; column < this.calculateTotalColumns(); column++) {\r\n                var ground = this.create(column * (15 * 3),  this.rowHeightOffset, 'platform');\r\n                ground.scale.setTo(3, 3);\r\n                ground.body.immovable = true;\r\n            }\r\n            this.gameRowHeights.push(this.rowHeightOffset);\r\n            this.rowHeightOffset -= this.spaceBetweenPlatforms;\r\n        }\r\n    }\r\n\r\n    createKongPlatform() {\r\n        for (var column = 0; column < 6; column++) {\r\n            var ground = this.create(column * (15 * 3), this.rowHeightOffset, 'platform');\r\n            ground.scale.setTo(3, 3);\r\n            ground.body.immovable = true;\r\n        }\r\n        console.log('setting kongRowHeight to %s', this.rowHeightOffset);\r\n        this.kongRowHeight = this.rowHeightOffset;\r\n    }\r\n}","///<reference path=\"../../tools/typings/tsd.d.ts\" />\r\n///<reference path=\"../../tools/typings/typescriptApp.d.ts\" />\r\n\r\nclass WinnerCount extends Phaser.Text{\r\n\r\n\tprivate maxWinners: number;\r\n\tprivate upKey: Phaser.Key;\r\n\tprivate downKey: Phaser.Key;\r\n\tprivate numberOfWinnersToGet :number;\r\n\tprivate helpText: string;\r\n\r\n\tconstructor(game: Phaser.Game, maxWinners: number) {\r\n\t\tthis.helpText = 'Up/Down to chose number of Winners. \\n  Space to draw Winners. \\n # of Winners to draw = ';\r\n\t\tvar locationY = 10;\r\n\t\tvar locationX = game.width - 300;\r\n\r\n\t\tsuper(game, locationX, locationY, this.helpText + '01', { font: '15px Arial', fill: '#ffffff', align: 'right' });\r\n\r\n\t\tthis.numberOfWinnersToGet = 1;\r\n\t\tthis.UpdateNumber(0);\r\n\t\tthis.maxWinners = maxWinners;\r\n\t\tthis.upKey = game.input.keyboard.addKey(Phaser.Keyboard.UP);\r\n\t\tthis.downKey = game.input.keyboard.addKey(Phaser.Keyboard.DOWN);\r\n\t}\r\n\r\n\tprivate UpdateNumber(updateAmount: number) {\r\n\t\tvar newNumberOfWinnersToGet = this.numberOfWinnersToGet + updateAmount;\r\n\t\tif (newNumberOfWinnersToGet <= this.maxWinners && newNumberOfWinnersToGet >= 1) {\r\n\t\t\tthis.numberOfWinnersToGet = newNumberOfWinnersToGet;\r\n\r\n\t\t\tif (this.numberOfWinnersToGet <= 9) {\r\n\t\t\t\tthis.text = this.helpText +  '0' + this.numberOfWinnersToGet.toString();\r\n\t\t\t}else {\r\n\t\t\t\tthis.text = this.helpText +  this.numberOfWinnersToGet.toString();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tpublic CheckKeys() {\r\n\t\tif (this.upKey.justDown)\t{\r\n\t\t\tthis.UpdateNumber(1);\r\n\t\t}else if (this.downKey.justDown)\t{\r\n\t\t\tthis.UpdateNumber(-1);\r\n\t\t}\r\n\t}\r\n}","///<reference path=\"../../tools/typings/tsd.d.ts\" />\r\n///<reference path=\"../../tools/typings/typescriptApp.d.ts\" />\r\n\r\n//gets random winners.  And Saves users that have already been drawn.\r\nclass WinnerDraw {\r\n\tprivate eventId :number;\r\n\tconstructor(eventId: number) {\r\n\t\tthis.eventId = eventId;\r\n\t}\r\n\r\n\tpublic PickWinners(numberToPick: number) {\r\n\t\tvar results : string[];\r\n\t\tif (numberToPick === 1) {\r\n\t\t\tresults = ['12345678901234567890123456789012345678901234567890'];\r\n\t\t\treturn results;\r\n\t\t}else {\r\n\t\t\tresults = ['Winner 1', 'Winner 2'];\r\n\t\t\treturn results;\r\n\t\t}\r\n\t}\r\n\r\n}","///<reference path=\"../../tools/typings/tsd.d.ts\" />\r\n///<reference path=\"../../tools/typings/typescriptApp.d.ts\" />\r\nclass WinnerName  extends Phaser.BitmapText{ \r\n\r\n\t\r\n\tconstructor(platformHeight: number, game: Phaser.Game, winnerName: string ){\r\n\t\r\n\tsuper(game, game.width/2, platformHeight - 40,  'winnerFont', winnerName, 25);\r\n\tthis.x = (game.width/2) - this.width/2;\r\n\tconsole.log(this.z);\r\n\r\n\t//this.visible = false;\r\n\r\n\r\n\r\n\r\n\t}\r\n\t\r\n\r\n}","///<reference path=\"../../tools/typings/tsd.d.ts\" />\r\n///<reference path=\"../../tools/typings/typescriptApp.d.ts\" />\r\nclass WinnerPicker {\r\n\r\n    constructor(width: number ) {\r\n        this.game = new Phaser.Game(width, 600, Phaser.AUTO, 'stage',\r\n            { preload: this.preload, create: this.create, update: this.update});\r\n    }\r\n\r\n    game: Phaser.Game;\r\n    platform : Platform;\r\n    kong : Kong;\r\n    winnerCount : WinnerCount;\r\n    mario: Mario;\r\n    spaceKey: Phaser.Key;\r\n    barrels: Phaser.Group;\r\n    winners: WinnerName;\r\n\r\n    preload() {\r\n        this.game.load.image('platform', 'src/img/platform.png');\r\n        this.game.load.spritesheet('kong', 'src/img/kong.png', 48, 34);\r\n        this.game.load.image('barrel', 'src/img/barrel.png');\r\n        this.game.load.spritesheet('mario', 'src/img/mario.png', 34, 28);\r\n        this.game.load.bitmapFont('winnerFont', 'src/img/desyrel.png', 'src/img/desyrel.xml');\r\n    }\r\n\r\n    create() {\r\n        this.platform = new Platform(this.game);\r\n        this.barrels = new Barrels(this.game, this.platform.gameRowHeights);\r\n        \r\n        this.kong = new Kong(this.game, this.platform.kongRowHeight);\r\n        this.game.add.existing(this.kong);\r\n\r\n        this.winnerCount = new WinnerCount(this.game, this.platform.gameRowHeights.length);\r\n        this.game.add.existing(this.winnerCount);\r\n\r\n        this.mario = new Mario(this.game, this.platform.gameRowHeights);\r\n        this.game.add.existing(this.mario);\r\n\r\n        this.spaceKey = this.game.input.keyboard.addKey(Phaser.Keyboard.SPACEBAR);\r\n        \r\n        this.winners = new WinnerName(576, this.game, \"chaussures louboutin bleu chaussures louboutin bleu\");\r\n        this.game.add.existing(this.winners)\r\n\r\n        //this.game.world.bringToTop(this.barrels);\r\n    }\r\n\r\n    update() {\r\n        this.game.physics.arcade.collide(this.kong, this.platform);\r\n        this.game.physics.arcade.collide(this.mario, this.platform);\r\n        this.game.physics.arcade.collide(this.mario, this.barrels, this.col, null, this);\r\n        this.winnerCount.CheckKeys();\r\n\r\n        this.mario.update();\r\n\r\n        if (this.spaceKey.justDown) {\r\n            this.mario.StartSmash();\r\n        }\r\n\r\n    }\r\n    \r\n    col(){\r\n        console.log('dd');\r\n    }\r\n}\r\n\r\nwindow.onload = () => {\r\n    var stageWidth = $('#stage').width();\r\n    // var game = new SimpleGame(stageWidth, () => {\r\n    //     alert('done'); \r\n    //     console.log(game.platform)\r\n    // });\r\n    var game = new WinnerPicker(stageWidth);\r\n};"],"sourceRoot":"/source/"}